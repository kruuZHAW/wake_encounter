#!/bin/sh



# set -k

dir=./

rm RMS.dat
# rm pddy.dat
# rm pddz.dat
# rm pddG.dat
rm TRAJE*
rm meteo.dat
rm ac_init.dat
rm EDR.dat
rm lidar.dat
rm P2P_*.dat

size=240     				# necessary file size in byte

i=0

while read cases                  	# reading the content of cases.dat into variable $cases
do

# echo 'Entering while...'

c=`echo $cases| cut -d' ' -f1` 
first=`echo $cases | cut -d' ' -f2`
camp=`echo $cases | cut -d' ' -f3`
rw=`echo $cases | cut -d' ' -f4`
edrfile=`echo $cases | cut -d' ' -f5`
acfile=`echo $cases | cut -d' ' -f6`
metfile=`echo $cases | cut -d' ' -f7`
case=`echo $cases | cut -c7-27`
d=`echo $cases | cut -c7-12`
day=`echo $cases | cut -c11-12`
month=`echo $cases | cut -c9-10`
year=`echo $cases | cut -c7-8`
ac=`echo $cases | cut -c24-27`
h=`echo $cases | cut -c14-15`
min=`echo $cases | cut -c16-17`
s=`echo $cases | cut -c18-19`
zehnmin=`echo $cases | cut -c16`
einmin=`echo $cases | cut -c17`



if [ "$c" == "0" ]
   then
   break
fi
echo ' '
echo '--------------------------------------------------'
echo $c
echo $ac
echo $d
echo $h':'$min' UTC'
echo $camp

for dhr in  $c
do
echo 'Entering for...'
echo $dhr



cat > ./lif << EOF
${case}
${first}
'${ac}'
'${d}'
${h}
${min}
${s}
${camp}
${rw}
${uac}
${edrfile}
${acfile}
EOF



# --> Link local input file:

cp lif fort.13

mdir=${dir}/meteo
ldir=${dir}/lidar
acdir=${dir}/aircraft
metfile=${mdir}/${metfile}
edrfile=${mdir}/${edrfile}
acfile=${acdir}/${acfile}

cp $metfile meteo.dat
cp $acfile ac_init.dat
cp $edrfile EDR.dat
echo $acfile
echo $edrfile
echo $metfile
cp ${ldir}/${c} lidar.dat

#if [ "$edrfile" != "none" ]
#then
#  edrfile=${edrdir}/${edrfile}
#  cp $edrfile EDR.dat
#fi




if [ -b "$device0" ]
then
  echo "$device0 is a block device."
fi




# Execute P2P and gnuplot

  i=1

  if [  -f "${ldir}/${c}" ]					# call P2P only if lidar data exists
  then
    if [  -f "$metfile" ] 					# call P2P only if meteo data exists
    then
       ./P2P			 				# call P2P
#        gnuplot P2P_norm.plo                       		# for non-dimensional output
       gnuplot P2P_dim.plo                       		# for dimensional output

#       psfile=P2P_levl_${case}.ps
#       epsfile=P2P_levl_${case}.eps
#       pngfile=P2P_levl_${case}.png
#       ps2epsi $psfile $epsfile
#       convert -density 80 $epsfile $pngfile
#       rm $psfile
#       rm $epsfile


    else
       echo "ERROR: meteo data could not be found"
    fi   
  else
    echo "ERROR: lidar data could not be found"
  fi   

done
done < "cases.dat"

#echo ' '
#echo '                                 Scoring'
#echo '----------------------------------------------------------------------'


#sort_scor


exit 0
